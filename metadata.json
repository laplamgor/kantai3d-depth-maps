{
  "patches": [
    {
      "id": "A",
      "pattern": "(=[^,;=]{0,50}\\(this\\)\\|\\|this;return ([^,;=]{0,50}=new PIXI.{0,80},){6}[^,;=]{0,50}=new [^;=]{0,80}\\((0x4f|79),(0xa4|164)\\),)",
      "replacement": "= window.sound_options $1"
    },
    {
      "id": "B",
      "pattern": "(=new )([^,;=]{0,20})(,[^,;=]{0,70}\\((0x5a|90),(0x18e|398)\\),)",
      "replacement": "$1$2$3\r\nwindow.sound_options._toggle120 = new $2,\r\nwindow.sound_options._toggle120.position.set(-120, 85),\r\nwindow.sound_options._toggle3d = new $2,\r\nwindow.sound_options._toggle3d.position.set(-120, 150),\r\nwindow.sound_options._toggle3d_ai = new $2,\r\nwindow.sound_options._toggle3d_ai.position.set(-120, 215),\r\nwindow.sound_options._toggle3d_text = new PIXI.Text('setting_text1', new PIXI.TextStyle({fontFamily: \"Georgia\", fontSize: 28, fill: '#ffffff'})),\r\nwindow.sound_options._toggle3d_text.position.set(-360, 88),\r\nwindow.sound_options._toggle3d_ai_text = new PIXI.Text('setting_text2', new PIXI.TextStyle({fontFamily: \"Georgia\", fontSize: 18, fill: '#ffffff'})),\r\nwindow.sound_options._toggle3d_ai_text.position.set(-360, 290),\r\nwindow.sound_options._toggle3d_bg = new PIXI.Graphics(),\r\nwindow.sound_options._toggle3d_bg.beginFill(0x202020, 0.8).lineStyle(2, 0xd1b44b, 0.8).drawRect(7-373-15, 56, 373, 413),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d_bg),\r\nwindow.sound_options.addChild(window.sound_options._toggle120),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d_ai),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d_text),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d_ai_text),"
    },
    {
      "id": "C",
      "pattern": "(\\((0x26|38),(0x18e|398)\\),this[^,;=]{0,60}\\((0xc6|198),(0x18e|398)\\),)",
      "replacement" :"$1\r\nthis._toggle120.initialize(),\r\nthis._toggle3d.initialize(),\r\nthis._toggle3d_ai.initialize(),"
    },
    {
      "id": "D",
      "pattern": "(function\\(\\)\\{[^{]{0,90},([^;=]{0,90}\\(\\),this[^=]{0,90}=null){11})([^,])",
      "replacement": "$1;\r\nthis._toggle120.dispose();\r\nthis._toggle120 = null;\r\nthis._toggle3d.dispose();\r\nthis._toggle3d = null;\r\nthis._toggle3d_ai.dispose();\r\nthis._toggle3d_ai = null; $3"
    },
    {
      "id": "E",
      "pattern": "(,'skin_id':this\\[[^{]{0,90}\\]\\};)",
      "replacement": ",localStorage.setItem('kantai3d.is120Enabled', this._sound._toggle120.value),\r\nlocalStorage.setItem('kantai3d.isDepthEnabled', this._sound._toggle3d.value),\r\nlocalStorage.setItem('kantai3d.isDepthAiEnabled', this._sound._toggle3d_ai.value),\r\nconsole.log(localStorage.getItem('kantai3d.is120Enabled')),\r\ncreatejs.Ticker.setFPS((localStorage.getItem('kantai3d.is120Enabled') != 'false') ? 120 : 60)\r\n$1"    },
    {
      "id": "F",
      "pattern": "((null==this[^,;=]{0,40}&&\\(this[^,;=]{0,40}=[^,;=]{0,70}\\),this[^,;=]{0,40}=[^,;=]{0,70},){2})",
      "replacement": "$1\r\nthis._toggle120.value = localStorage.getItem('kantai3d.is120Enabled') != 'false',\r\nthis._toggle3d.value = localStorage.getItem('kantai3d.isDepthEnabled') != 'false',\r\nthis._toggle3d_ai.value = localStorage.getItem('kantai3d.isDepthAiEnabled') != 'false',\r\nconsole.log(createjs.Ticker.timingMode),\r\nconsole.log(createjs.Ticker.framerate),"

    },
    {
      "id": "G",
      "pattern": "\\}(return.{0,599}\\(0(x0)?,parseInt\\([^,;=]{0,20}\\)\\)\\))",
      "replacement": "\n } return window.displacementPath = (function () {\n$1\n})();\n"
    },
    {
      "id": "H",
      "pattern": "(new PIXI[^,;=]{0,20}\\([^,;=]{0,70},[^,;=]{0,60},[^,;=]{0,20}\\);document)",
      "replacement": "\n window.pixiApp = $1"
    },
    {
      "id": "I",
      "pattern": "(var[^=]{0,19}=[^=]{0,29},[^=]{0,39}=[^=]{0,99},[^=]{0,99})(=.{0,99}0x0.{0,99}0x0.{0,99}PIXI.{0,999}\\((0x1eb,-0x58|491,-88)\\);var [^=]{0,99}=)",
      "replacement": "\n $1 = window.charar $2 window.charal = \n"
    },
    {
      "id": "J",
      "pattern": "(\\\/0x2.{0,99}\\\/0x2,[^,;=]{0,99})(\\=.{0,999}-(0x58|88)[^;]{0,200};?)(})",
      "replacement": "\n $1 = window.charah $2 \r\nwindow.portOffset = -window.charal + window.charah.x;\/\/-l+h.x\r\nwindow.portOffsetR = window.charar;\/\/r\r\n\r\n\r\nvar url1 = window.displacementPath.replace(\/resources\\\/ship\\\/full[_dmg]*\\\/([0-9]*)_([0-9_a-z]*).png(\\?version=)?([0-9]*)\/g, \"https:\/\/cdn.jsdelivr.net\/gh\/laplamgor\/kantai3d-depth-maps@master\/source\/$$1\/$$1_$$2_v$$4.png\");\r\nvar url2 = window.displacementPath.replace(\/resources\\\/ship\\\/full[_dmg]*\\\/([0-9]*)_([0-9_a-z]*).png(\\?version=)?([0-9]*)\/g, \"https:\/\/kantai3d.com\/midas\/$$1_$$2_v$$4.png\");\r\nvar triedUrl2 = false;\r\n\r\ncreatejs.Ticker.setFPS((localStorage.getItem('kantai3d.is120Enabled') != 'false') ? 120 : 60);\r\nwindow.displacementFilter = PIXI.DepthPerspectiveFilter;\r\n\r\nconst loadDepthUrl = function(url, chara) {\r\nwindow.displacementSprite = PIXI.Sprite.fromImage(url);\r\n\r\nwindow.displacementFilter.uniforms.textureSize = {\r\n    0: chara.texture.width,\r\n    1: chara.texture.height\r\n};\r\n\r\nwindow.displacementSprite.visible = false;\r\n\r\nwindow.displacementFilter.padding = 150;\r\n\r\nwindow.currentChara = chara;\r\n\r\n\r\nif (window.displacementSprite.width != 1) {\r\n    console.log('The depth map for this secretary is already loaded.');\r\n    \/\/ The depth map is already loaded\r\n    window.displacementFilter.uniforms.displacementMap = window.displacementSprite.texture;\r\n    window.displacementFilter.uniforms.scale = 1.0;\r\n    window.displacementFilter.uniforms.focus = 0.5;\r\n    window.displacementFilter.uniforms.offset = [0.0, 0.0];\r\n    window.currentChara.filters = [window.displacementFilter];\r\n    window.currentChara.addChild(window.displacementSprite);\r\n\r\n    window.mousex1 = null;\r\n    window.mousey1 = null;\r\n    prepareJiggle(window.currentChara.texture, window.displacementSprite.texture);\r\n    window.displacementFilter.uniforms.displacementMap = window.jiggledDepthMapRT.texture;\r\n} else {\r\n    \/\/ The depth map is not loaded yet, and may not exist in server at all\r\n    \/\/ Disable the filter first\r\n    chara.filters = [];\r\n    window.currentChara.filters = [];\r\n    window.displacementSprite.texture.baseTexture.on('loaded', function() {\r\n\r\n        console.log('The depth map for this secretary is now loaded.');\r\n        \/\/ Re-enable the filter when resource loaded\r\n        window.displacementFilter.uniforms.displacementMap = window.displacementSprite.texture;\r\n        window.displacementFilter.uniforms.scale = 1.0;\r\n        window.displacementFilter.uniforms.focus = 0.5;\r\n        window.displacementFilter.uniforms.offset = [0.0, 0.0];\r\n        window.currentChara.filters = [window.displacementFilter];\r\n        window.currentChara.addChild(window.displacementSprite);\r\n\r\n        window.mousex1 = null;\r\n        window.mousey1 = null;\r\n        prepareJiggle(window.currentChara.texture, window.displacementSprite.texture);\r\n        window.displacementFilter.uniforms.displacementMap = window.jiggledDepthMapRT.texture;\r\n    });\r\n    window.displacementSprite.texture.baseTexture.on('error', function() {\r\n        if (!triedUrl2 && localStorage.getItem('kantai3d.isDepthAiEnabled') != 'false') {\r\n            triedUrl2 = true;\r\n            loadDepthUrl(url2, chara);\r\n        }\r\n        console.log('The depth map for this secretary is not available. Please visit https:\/\/github.com\/laplamgor\/kantai3d to check the supported CG list and consider to contribute your own depth map.');\r\n    });\r\n\r\n    if (!window.displacementSprite.texture.baseTexture.isLoading) {\r\n        if (!triedUrl2 && localStorage.getItem('kantai3d.isDepthAiEnabled') != 'false') {\r\n            triedUrl2 = true;\r\n            loadDepthUrl(url2, chara);\r\n        }\r\n    }\r\n}\r\n}\r\nif (localStorage.getItem('kantai3d.isDepthEnabled') != 'false') {\r\n    loadDepthUrl(url1, this._chara);\r\n} else {\r\n    this._chara.filters = [];\r\n}\r\n\r\nfunction prepareJiggle(baseMap, depthMap) {\r\n\r\n    window.jigglePositions = [];\r\n    window.jiggleVelocities = [];\r\n    window.jiggleForces = [];\r\n\r\n    window.jiggleStaticFlags = [];\r\n    window.jiggleMovement = [];\r\n\r\n    window.damping = [];\r\n    window.springiness = [];\r\n    \r\n\r\n    var depthImg = depthMap.baseTexture.source;\r\n    var tempCanvas = document.createElement('canvas');\r\n    tempCanvas.width = depthImg.width;\r\n    tempCanvas.height = depthImg.height;\r\n    let tmCtx = tempCanvas.getContext('2d');\r\n    tmCtx.drawImage(depthImg, 0, 0);\r\n    var dmData = tmCtx.getImageData(0, 0, depthImg.width, depthImg.height).data;\r\n\r\n\r\n    window.jiggleMeshW = Math.ceil(baseMap.width \/ 10.0);\r\n    window.jiggleMeshH = Math.ceil(baseMap.height \/ 10.0);\r\n\r\n    \/\/ This is the jiggled mseh\r\n    window.jiggledDepthMapMesh = new PIXI.mesh.Plane(window.displacementSprite.texture, window.jiggleMeshW, window.jiggleMeshH);\r\n    window.jiggledDepthMapMesh.visible = false;\r\n\r\n    \/\/ This is the render texture of the jiggled mseh\r\n    window.jiggledDepthMapRT = new PIXI.Sprite(PIXI.RenderTexture.create(baseMap.width, baseMap.height));\r\n    window.jiggledDepthMapRT.visible = false;\r\n\r\n    \r\n    window.jiggledBaseMapMesh = new PIXI.mesh.Plane(baseMap, window.jiggleMeshW, window.jiggleMeshH);\r\n    \r\n    window.pixiApp.stage.addChild(window.jiggledDepthMapMesh);\r\n    window.pixiApp.stage.addChild(window.jiggledDepthMapRT);\r\n    window.currentChara.addChild(window.jiggledBaseMapMesh);\r\n    \r\n    window.gridW = baseMap.width \/ (window.jiggleMeshW - 1.0);\r\n    window.gridH = baseMap.height \/ (window.jiggleMeshH - 1.0);\r\n    for (var y = 0; y < window.jiggleMeshH; y++) {\r\n        for (var x = 0; x < window.jiggleMeshW; x++) {\r\n            window.jigglePositions.push({ x: window.gridW * x, y: y * window.gridH });\r\n            window.jiggleVelocities.push({ x: 0, y: 0 });\r\n            window.jiggleForces.push({ x: 0, y: 0 });\r\n\r\n            var r = dmData[(Math.floor(y * window.gridH) * baseMap.width + Math.floor(x * window.gridW)) * 4 + 0];\r\n            var b = dmData[(Math.floor(y * window.gridH) * baseMap.width + Math.floor(x * window.gridW)) * 4 + 2];\r\n\r\n            window.damping.push(1.0 \/ (b \/ 255.0 * 16.0 + 1));\r\n            window.springiness.push(1.0 \/ ( b \/ 255.0 * 32.0 + 1));\r\n        \r\n\r\n            window.jiggleStaticFlags.push(b == 0);\r\n            window.jiggleMovement.push((r - 127.0) \/ 128.0);\r\n        }\r\n    }\r\n    \r\n    window.Mx = null;\r\n    window.My = null;\r\n    window.Mx2 = null;\r\n    window.My2 = null;\r\n} \r\n$4"
    },
    {
      "id": "K",
      "pattern": "(\\=Math[^,;=]{0,40},[^,;=]{0,30}\\=(0x)?1\\+(0)?\\.012[^,;=]{0,10}\\*\\(.{0,29}\\);this[^,;=]{0,90}\\([^,;=]{0,90}\\),this(\\.y|\\['y'\\])=this[^,;=]{0,20}-1.5\\*[^,;=]{0,40}\\*1.8;?)",
      "replacement": " = window.charasin $1 ;\r\nwindow.displacementFilter.uniforms.textureScale = this.scale.x;"
    },
    {
      "id": "L",
      "pattern": "([\\s\\S]*)",
      "replacement": "$1\r\n\r\n\r\n'use strict';\r\nPIXI.DepthPerspectiveFilter = new PIXI.Filter(null, `precision mediump float;\r\nuniform vec2 offset;\r\n\r\nuniform sampler2D uSampler;\r\nuniform sampler2D displacementMap;\r\n\r\nuniform float textureScale;\r\n\r\nuniform vec2 textureSize;\r\nuniform vec2 frameSize;\r\nuniform vec2 filterAreaOffset;\r\n\r\nuniform float padding;\r\nuniform vec4 filterArea;\r\nuniform vec4 filterClamp;\r\n\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vColor;\r\nuniform vec4 dimensions;\r\nuniform vec2 mapDimensions;\r\nuniform float scale;\r\nuniform float focus;\r\n\r\n\r\nvec2 mapCoordDepth(vec2 coord)\r\n{\r\n    return (coord * (frameSize) - filterAreaOffset - padding) \/ textureSize \/ textureScale;\r\n}\r\n\r\nconst float compression = 1.0;\r\nconst float dmin = 0.0;\r\nconst float dmax = 1.0;\r\n\r\n#define MAXSTEPS 600.0\r\nfloat steps = max(MAXSTEPS *length(offset), 30.0);\r\n\r\n\r\n\r\nvoid main(void)\r\n{\r\n\r\n    float aspect = dimensions.x \/ dimensions.y;\r\n    vec2 scale2 =\r\n        vec2(scale * min(1.0, 1.0 \/ aspect), scale * min(1.0, aspect)) * vec2(1, -1);\r\n    mat2 baseVector =\r\n        mat2(vec2((0.5 - focus) * (offset) - (offset) \/ 2.0) * scale2,\r\n             vec2((0.5 - focus) * (offset) + (offset) \/ 2.0) * scale2);\r\n\r\n    vec2 pos = (vTextureCoord);\r\n    mat2 vector = baseVector;\r\n\r\n    float dstep = compression \/ (steps - 1.0);\r\n    vec2 vstep = (vector[1] - vector[0]) \/ vec2((steps - 1.0));\r\n\r\n    vec2 posSumLast = vec2(0.0);\r\n    vec2 posSum = vec2(0.0);\r\n\r\n    float weigth = 1.0;\r\n    float dpos;\r\n    float dposLast;\r\n\r\n    for (float i = 0.0; i < MAXSTEPS; ++i)\r\n    {\r\n        vec2 vpos = pos + vector[1] - i * vstep;\r\n        dpos = 1.0 - i * dstep;\r\n        float depth = texture2D(displacementMap, mapCoordDepth(vpos)).r;\r\n\r\n\r\n        if (texture2D(uSampler, vpos)[3] == 0.0)\r\n        {\r\n            depth = 0.0;\r\n        }\r\n\r\n        depth = clamp(depth, dmin, dmax);\r\n\r\n        if (dpos > depth)\r\n        {\r\n            posSumLast = vpos;\r\n            dposLast = dpos;\r\n        }\r\n        else\r\n        {\r\n            posSum = vpos;\r\n            weigth = (depth - dposLast) \/ dstep;\r\n            break;\r\n        }\r\n    };\r\n\r\n    gl_FragColor = texture2D(\r\n                       uSampler,\r\n                       (posSum - posSumLast) * -clamp(weigth * 0.5 + 0.5, 0.0, 1.5) + posSum);\r\n\r\n}`);\r\n\r\nPIXI.DepthPerspectiveFilter.apply = function(filterManager, input, output)\r\n{\r\n    this.uniforms.dimensions = {\r\n    0: input.sourceFrame.width,\r\n    1: input.sourceFrame.height\r\n    };\r\n\r\n    this.uniforms.padding = this.padding;\r\n    \r\n    this.uniforms.frameSize = { \r\n    0: input.size.width, \r\n    1: input.size.height\r\n    };\r\n\r\n    this.uniforms.filterAreaOffset = { \r\n    0: Math.min(window.currentChara.worldTransform.tx, 0.0), \r\n    1: Math.min(window.currentChara.worldTransform.ty, 0.0)\r\n    };\r\n\r\n\r\n    \/\/\/\/\/\/\/\/ mouse\r\n    var mousex2 = (window.pixiApp.renderer.plugins.interaction.mouse.global.x);\r\n    var mousey2 = (window.pixiApp.renderer.plugins.interaction.mouse.global.y);\r\n\r\n    if (!window.mouseoutside) {\r\n        if (!window.mousex1)\r\n            window.mousex1 = mousex2;\r\n        if (!window.mousey1)\r\n            window.mousey1 = mousey2;\r\n\r\n        if (!window.mousex)\r\n            window.mousex = 0;\r\n        if (!window.mousey)\r\n            window.mousey = 0;\r\n        if (!window.mouset)\r\n            window.mouset = Date.now();\r\n\r\n        window.mousex += (mousex2 - window.mousex1) * (Date.now() - window.mouset);\r\n        window.mousey += (mousey2 - window.mousey1) * (Date.now() - window.mouset);\r\n\r\n        window.mousex1 = mousex2;\r\n        window.mousey1 = mousey2;\r\n    }\r\n\r\n    var flip = (window.currentChara.transform.position.x - window.portOffset) \/ (window.portOffsetR) - 0.5;\r\n    window.displacementFilter.uniforms.offset = [flip * (window.mousex \/ 1200.0 * 0.05) * 1.3, 0.02 * window.charasin - 0.01 + (window.mousey \/ 720.0 * 0.05) * 0.6];\r\n\r\n    window.mousex = window.mousex * Math.pow(0.9, (Date.now() - window.mouset) \/ 30.0);\r\n    window.mousey = window.mousey * Math.pow(0.9, (Date.now() - window.mouset) \/ 30.0);\r\n    window.mouset = Date.now();\r\n\r\n\r\n    \/\/\/\/\/\/\/\/\r\n    \r\n    var vertices = window.jiggledBaseMapMesh.vertices;\r\n    var vertices2 = window.jiggledDepthMapMesh.vertices;\r\n\r\n    var newMx = window.displacementFilter.uniforms.offset[0];\r\n    var newMy = window.displacementFilter.uniforms.offset[1];\r\n    \r\n    var baseMap = window.currentChara.texture;\r\n    var depthMap = window.displacementSprite.texture;\r\n    if (baseMap && baseMap.baseTexture && depthMap && depthMap.baseTexture) {\r\n\r\n        window.My2 = window.My;\r\n        window.Mx2 = window.Mx;\r\n        window.My = newMy;\r\n        window.Mx = newMx;\r\n        for (var y = 0; y < window.jiggleMeshH; y++) {\r\n            for (var x = 0; x < window.jiggleMeshW; x++) {\r\n                resetForce(x, y);\r\n            }\r\n        }\r\n\r\n        if (window.Mx && window.My && window.Mx2 && window.My2 && newMx != -999999 && window.Mx != -999999 && window.Mx2 != -999999) {\r\n    \r\n            var aX = (window.Mx2 - window.Mx) - (window.Mx - newMx);\r\n            var aY = (window.My2 - window.My) - (window.My - newMy);\r\n    \r\n            for (var y = 0; y < window.jiggleMeshH; y++) {\r\n                for (var x = 0; x < window.jiggleMeshW; x++) {\r\n                    var m = window.jiggleMovement[y * window.jiggleMeshW + x];\r\n                    window.jiggleForces[y * window.jiggleMeshW + x].x += aX * m * -50;\r\n                    window.jiggleForces[y * window.jiggleMeshW + x].y += aY * m * 50;\r\n                }\r\n            }\r\n        }\r\n    \r\n\r\n        for (var y = 0; y < window.jiggleMeshH; y++) {\r\n            for (var x = 0; x < window.jiggleMeshW; x++) {\r\n                if (x != 0) {\r\n                    springUpdate(x - 1, y, x, y);\r\n                }\r\n                if (y != 0) {\r\n                    springUpdate(x, y - 1, x, y);\r\n                }\r\n            }\r\n        }\r\n    \r\n    \r\n        for (var y = 0; y < window.jiggleMeshH; y++) {\r\n            for (var x = 0; x < window.jiggleMeshW; x++) {\r\n                addDampingForce(x, y);\r\n                update(x, y);\r\n            }\r\n        }\r\n\r\n    \r\n        for (var i = 0; i < window.jigglePositions.length; i++) {\r\n            var pos = window.jigglePositions[i];\r\n            vertices[i * 2] = Math.min(Math.max(pos.x, 0), baseMap.width);\r\n            vertices[i * 2 + 1] = Math.min(Math.max(pos.y, 0), baseMap.height);\r\n    \r\n            vertices2[i * 2] = vertices[i * 2];\r\n            vertices2[i * 2 + 1] = vertices[i * 2 + 1];\r\n        }\r\n    }\r\n    \/\/\/\/\/\/\/\/\r\n\r\n    window.jiggledDepthMapMesh.visible = true;\r\n    window.pixiApp.renderer.render(window.jiggledDepthMapMesh, window.jiggledDepthMapRT.texture);\r\n    window.jiggledDepthMapMesh.visible = false;\r\n\r\n\r\n    \/\/ draw the filter...\r\n    filterManager.applyFilter(this, input, output);\r\n}\r\n\r\n\r\nfunction resetForce(x, y) {\r\n    window.jiggleForces[y * window.jiggleMeshW + x] = { x: 0, y: 0 };\r\n}\r\n\r\nfunction addForce(x, y, addX, addY) {\r\n    var f = window.jiggleForces[y * window.jiggleMeshW + x];\r\n    f.x += addX;\r\n    f.y += addY;\r\n}\r\n\r\nfunction addDampingForce(x, y) {\r\n    var v = jiggleVelocities[y * window.jiggleMeshW + x];\r\n    var f = window.jiggleForces[y * window.jiggleMeshW + x];\r\n    f.x -= v.x * window.damping[y * window.jiggleMeshW + x];\r\n    f.y -= v.y * window.damping[y * window.jiggleMeshW + x];\r\n}\r\n\r\n\r\nfunction update(x, y) {\r\n    var p = window.jigglePositions[y * window.jiggleMeshW + x];\r\n    var v = window.jiggleVelocities[y * window.jiggleMeshW + x];\r\n    var f = window.jiggleForces[y * window.jiggleMeshW + x];\r\n\r\n    if (window.jiggleStaticFlags[y * window.jiggleMeshW + x] == false) {\r\n        v.x += f.x;\r\n        v.y += f.y;\r\n        p.x += v.x;\r\n        p.y += v.y;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction springUpdate(x1, y1, x2, y2) {\r\n    if (window.jiggleStaticFlags[x1 + y1 * window.jiggleMeshW.w] && window.jiggleStaticFlags[x2 + y2 * window.jiggleMeshW.w]) \r\n        return;\r\n\r\n    var distanceOrigin = (x2 - x1) * window.gridW + (y2 - y1) * window.gridH;\r\n    \r\n    \r\n\r\n    var p1 = window.jigglePositions[y1 * window.jiggleMeshW + x1];\r\n    var p2 = window.jigglePositions[y2 * window.jiggleMeshW + x2];\r\n\r\n    var distance = len(sub(p1, p2));\r\n\r\n    var springiness = (window.springiness[y1 * window.jiggleMeshW + x1] + window.springiness[y2 * window.jiggleMeshW + x2]) \/ 2;\r\n\r\n    var springForce = springiness * (distanceOrigin - distance);\r\n    var frcToAdd = tim(normalize(sub(p1, p2)), springForce);\r\n\r\n    addForce(x1, y1, frcToAdd.x, frcToAdd.y);\r\n    addForce(x2, y2, -frcToAdd.x, -frcToAdd.y);\r\n}\r\n\r\n\r\nfunction len(v) {\r\n    return Math.sqrt(v.x * v.x + v.y * v.y);\r\n}\r\n\r\nfunction normalize(v) {\r\n    var l = len(v);\r\n    return { x: v.x \/ l, y: v.y \/ l };\r\n}\r\n\r\nfunction sub(v1, v2) {\r\n    return { x: v1.x - v2.x, y: v1.y - v2.y }\r\n}\r\n\r\nfunction tim(v1, s) {\r\n    return { x: v1.x * s, y: v1.y * s }\r\n}"
    }
  ]
}