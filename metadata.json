{
  "patches": [
    {
      "id": "A",
      "pattern": "(=[^,;=]{0,50}\\(this\\)\\|\\|this;return ([^,;=]{0,50}=new PIXI.{0,80},){6}[^,;=]{0,50}=new [^;=]{0,80}\\((0x4f|79),(0xa4|164)\\),)",
      "replacement": "= window.sound_options $1"
    },
    {
      "id": "B",
      "pattern": "(=new )([^,;=]{0,20})(,[^,;=]{0,70}\\((0x5a|90),(0x18e|398)\\),)",
      "replacement": "$1$2$3\r\nwindow.sound_options._toggle120 = new $2,\r\nwindow.sound_options._toggle120.position.set(-120, 85),\r\nwindow.sound_options._toggle3d = new $2,\r\nwindow.sound_options._toggle3d.position.set(-120, 150),\r\nwindow.sound_options._toggle3d_ai = new $2,\r\nwindow.sound_options._toggle3d_ai.position.set(-120, 215),\r\nwindow.sound_options._toggle3d_text = new PIXI.Text('setting_text1', new PIXI.TextStyle({fontFamily: \"Georgia\", fontSize: 28, fill: '#ffffff'})),\r\nwindow.sound_options._toggle3d_text.position.set(-360, 88),\r\nwindow.sound_options._toggle3d_ai_text = new PIXI.Text('setting_text2', new PIXI.TextStyle({fontFamily: \"Georgia\", fontSize: 18, fill: '#ffffff'})),\r\nwindow.sound_options._toggle3d_ai_text.position.set(-360, 290),\r\nwindow.sound_options._toggle3d_bg = new PIXI.Graphics(),\r\nwindow.sound_options._toggle3d_bg.beginFill(0x202020, 0.8).lineStyle(2, 0xd1b44b, 0.8).drawRect(7-373-15, 56, 373, 413),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d_bg),\r\nwindow.sound_options.addChild(window.sound_options._toggle120),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d_ai),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d_text),\r\nwindow.sound_options.addChild(window.sound_options._toggle3d_ai_text),"
    },
    {
      "id": "C",
      "pattern": "(\\((0x26|38),(0x18e|398)\\),this[^,;=]{0,60}\\((0xc6|198),(0x18e|398)\\),)",
      "replacement": "$1\r\nthis._toggle120.initialize(),\r\nthis._toggle3d.initialize(),\r\nthis._toggle3d_ai.initialize(),"
    },
    {
      "id": "D",
      "pattern": "(function\\(\\)\\{[^{]{0,90},([^;=]{0,90}\\(\\),this[^=]{0,90}=null){11})([^,])",
      "replacement": "$1;\r\nthis._toggle120.dispose();\r\nthis._toggle120 = null;\r\nthis._toggle3d.dispose();\r\nthis._toggle3d = null;\r\nthis._toggle3d_ai.dispose();\r\nthis._toggle3d_ai = null; $3"
    },
    {
      "id": "E",
      "pattern": "(,'skin_id':this\\[[^{]{0,90}\\]\\};)",
      "replacement": "$1\r\nlocalStorage.setItem('kantai3d.is120Enabled', this._sound._toggle120.value);\r\nlocalStorage.setItem('kantai3d.isDepthEnabled', this._sound._toggle3d.value);\r\nlocalStorage.setItem('kantai3d.isDepthAiEnabled', this._sound._toggle3d_ai.value);\r\nconsole.log(localStorage.getItem('kantai3d.is120Enabled'));\r\ncreatejs.Ticker.setFPS((localStorage.getItem('kantai3d.is120Enabled') != 'false') ? 120 : 60)\r\n;"
    },
    {
      "id": "F",
      "pattern": "((null==this[^,;=]{0,40}&&\\(this[^,;=]{0,40}=[^,;=]{0,70}\\),this[^,;=]{0,40}=[^,;=]{0,70},){2})",
      "replacement": "$1\r\nthis._toggle120.value = localStorage.getItem('kantai3d.is120Enabled') != 'false',\r\nthis._toggle3d.value = localStorage.getItem('kantai3d.isDepthEnabled') != 'false',\r\nthis._toggle3d_ai.value = localStorage.getItem('kantai3d.isDepthAiEnabled') != 'false',\r\nconsole.log(createjs.Ticker.timingMode),\r\nconsole.log(createjs.Ticker.framerate),"
    },
    {
      "id": "G",
      "pattern": "\\}(return.{0,599}\\(0(x0)?,parseInt\\([^,;=]{0,20}\\)\\)\\))",
      "replacement": "\r\n } return window.displacementPath = (function () {\r\n$1\r\n})();\r\n"
    },
    {
      "id": "H",
      "pattern": "(new PIXI[^,;=]{0,20}\\([^,;=]{0,70},[^,;=]{0,60},[^,;=]{0,20}\\);document)",
      "replacement": "\r\n window.pixiApp = $1"
    },
    {
      "id": "I",
      "pattern": "(var[^=]{0,19}=[^=]{0,29},[^=]{0,39}=[^=]{0,99},[^=]{0,99})(=.{0,99}0x0.{0,99}0x0.{0,99}PIXI.{0,999}\\((0x1eb,-0x58|491,-88)\\);var [^=]{0,99}=)",
      "replacement": "\r\n $1 = window.charar $2 window.charal = \r\n"
    },
    {
      "id": "J",
      "pattern": "(\\\/0x2.{0,99}\\\/0x2,[^,;=]{0,99})(\\=.{0,999}-(0x58|88)[^;]{0,200};?)(})",
      "replacement": "\r\n $1 = window.charah $2 \r\nwindow.portOffset = -window.charal + window.charah.x;\/\/-l+h.x\r\nwindow.portOffsetR = window.charar;\/\/r\r\n\r\n\r\nvar url1 = window.displacementPath.replace(\/resources\\\/ship\\\/full[_dmg]*\\\/([0-9]*)_([0-9_a-z]*).png(\\?version=)?([0-9]*)\/g, \"https:\/\/cdn.jsdelivr.net\/gh\/laplamgor\/kantai3d-depth-maps@master\/source\/$$1\/$$1_$$2_v$$4.png\");\r\nvar url2 = window.displacementPath.replace(\/resources\\\/ship\\\/full[_dmg]*\\\/([0-9]*)_([0-9_a-z]*).png(\\?version=)?([0-9]*)\/g, \"https:\/\/kantai3d.com\/midas\/$$1_$$2_v$$4.png\");\r\nvar triedUrl2 = false;\r\n\r\ncreatejs.Ticker.setFPS((localStorage.getItem('kantai3d.is120Enabled') != 'false') ? 120 : 60);\r\nwindow.displacementFilter = PIXI.DepthPerspectiveFilter;\r\n\r\nconst loadDepthUrl = function(url, chara) {\r\nwindow.displacementSprite = PIXI.Sprite.fromImage(url);\r\n\r\nwindow.displacementFilter.uniforms.textureSize = {\r\n    0: chara.texture.width,\r\n    1: chara.texture.height\r\n};\r\n\r\nwindow.displacementSprite.visible = false;\r\n\r\nwindow.displacementFilter.padding = 150;\r\n\r\nwindow.currentChara = chara;\r\n\r\n\r\nif (window.displacementSprite.width != 1) {\r\n    console.log('The depth map for this secretary is already loaded.');\r\n    \/\/ The depth map is already loaded\r\n    window.displacementFilter.uniforms.displacementMap = window.displacementSprite.texture;\r\n    window.displacementFilter.uniforms.scale = 1.0;\r\n    window.displacementFilter.uniforms.focus = 0.5;\r\n    window.displacementFilter.uniforms.offset = [0.0, 0.0];\r\n    window.currentChara.filters = [window.displacementFilter];\r\n    window.currentChara.addChild(window.displacementSprite);\r\n\r\n    window.mousex1 = null;\r\n    window.mousey1 = null;\r\n    prepareJiggle(window.currentChara.texture, window.displacementSprite.texture);\r\n    window.displacementFilter.uniforms.displacementMap = window.jiggledDepthMapRT.texture;\r\n} else {\r\n    \/\/ The depth map is not loaded yet, and may not exist in server at all\r\n    \/\/ Disable the filter first\r\n    chara.filters = [];\r\n    window.currentChara.filters = [];\r\n    window.displacementSprite.texture.baseTexture.on('loaded', function() {\r\n\r\n        console.log('The depth map for this secretary is now loaded.');\r\n        \/\/ Re-enable the filter when resource loaded\r\n        window.displacementFilter.uniforms.displacementMap = window.displacementSprite.texture;\r\n        window.displacementFilter.uniforms.scale = 1.0;\r\n        window.displacementFilter.uniforms.focus = 0.5;\r\n        window.displacementFilter.uniforms.offset = [0.0, 0.0];\r\n        window.currentChara.filters = [window.displacementFilter];\r\n        window.currentChara.addChild(window.displacementSprite);\r\n\r\n        window.mousex1 = null;\r\n        window.mousey1 = null;\r\n        prepareJiggle(window.currentChara.texture, window.displacementSprite.texture);\r\n        window.displacementFilter.uniforms.displacementMap = window.jiggledDepthMapRT.texture;\r\n    });\r\n    window.displacementSprite.texture.baseTexture.on('error', function() {\r\n        if (!triedUrl2 && localStorage.getItem('kantai3d.isDepthAiEnabled') != 'false') {\r\n            triedUrl2 = true;\r\n            loadDepthUrl(url2, chara);\r\n        }\r\n        console.log('The depth map for this secretary is not available. Please visit https:\/\/github.com\/laplamgor\/kantai3d to check the supported CG list and consider to contribute your own depth map.');\r\n    });\r\n\r\n    if (!window.displacementSprite.texture.baseTexture.isLoading) {\r\n        if (!triedUrl2 && localStorage.getItem('kantai3d.isDepthAiEnabled') != 'false') {\r\n            triedUrl2 = true;\r\n            loadDepthUrl(url2, chara);\r\n        }\r\n    }\r\n}\r\n}\r\nif (localStorage.getItem('kantai3d.isDepthEnabled') != 'false') {\r\n    loadDepthUrl(url1, this._chara);\r\n} else {\r\n    this._chara.filters = [];\r\n}\r\n\r\nfunction prepareJiggle(baseMap, depthMap) {\r\n\r\n    window.jigglePositions = [];\r\n    window.jiggleVelocities = [];\r\n    window.jiggleForces = [];\r\n\r\n    window.jiggleStaticFlags = [];\r\n    window.jiggleMovement = [];\r\n\r\n    window.damping = [];\r\n    window.springiness = [];\r\n    \r\n\r\n    var depthImg = depthMap.baseTexture.source;\r\n    var tempCanvas = document.createElement('canvas');\r\n    tempCanvas.width = depthImg.width;\r\n    tempCanvas.height = depthImg.height;\r\n    let tmCtx = tempCanvas.getContext('2d');\r\n    tmCtx.drawImage(depthImg, 0, 0);\r\n    var dmData = tmCtx.getImageData(0, 0, depthImg.width, depthImg.height).data;\r\n\r\n\r\n    window.jiggleMeshW = Math.ceil(baseMap.width \/ 10.0);\r\n    window.jiggleMeshH = Math.ceil(baseMap.height \/ 10.0);\r\n\r\n    \/\/ This is the jiggled mseh\r\n    window.jiggledDepthMapMesh = new PIXI.mesh.Plane(window.displacementSprite.texture, window.jiggleMeshW, window.jiggleMeshH);\r\n    window.jiggledDepthMapMesh.visible = false;\r\n\r\n    \/\/ This is the render texture of the jiggled mseh\r\n    window.jiggledDepthMapRT = new PIXI.Sprite(PIXI.RenderTexture.create(baseMap.width, baseMap.height));\r\n    window.jiggledDepthMapRT.visible = false;\r\n\r\n    \r\n    window.jiggledBaseMapMesh = new PIXI.mesh.Plane(baseMap, window.jiggleMeshW, window.jiggleMeshH);\r\n    \r\n    window.pixiApp.stage.addChild(window.jiggledDepthMapMesh);\r\n    window.pixiApp.stage.addChild(window.jiggledDepthMapRT);\r\n    window.currentChara.addChild(window.jiggledBaseMapMesh);\r\n    \r\n    window.gridW = baseMap.width \/ (window.jiggleMeshW - 1.0);\r\n    window.gridH = baseMap.height \/ (window.jiggleMeshH - 1.0);\r\n    for (var y = 0; y < window.jiggleMeshH; y++) {\r\n        for (var x = 0; x < window.jiggleMeshW; x++) {\r\n            window.jigglePositions.push({ x: window.gridW * x, y: y * window.gridH });\r\n            window.jiggleVelocities.push({ x: 0, y: 0 });\r\n            window.jiggleForces.push({ x: 0, y: 0 });\r\n\r\n            var r = dmData[(Math.floor(y * window.gridH) * baseMap.width + Math.floor(x * window.gridW)) * 4 + 0];\r\n            var b = dmData[(Math.floor(y * window.gridH) * baseMap.width + Math.floor(x * window.gridW)) * 4 + 2];\r\n\r\n            window.damping.push(1.0 \/ (b \/ 255.0 * 16.0 + 1));\r\n            window.springiness.push(1.0 \/ ( b \/ 255.0 * 32.0 + 1));\r\n        \r\n\r\n            window.jiggleStaticFlags.push(b == 0);\r\n            window.jiggleMovement.push((r - 127.0) \/ 128.0);\r\n        }\r\n    }\r\n    \r\n    window.Mx = null;\r\n    window.My = null;\r\n    window.Mx2 = null;\r\n    window.My2 = null;\r\n} \r\n$4"
    },
    {
      "id": "K",
      "pattern": "(\\=Math[^,;=]{0,40},[^,;=]{0,30}\\=(0x)?1\\+(0)?\\.012[^,;=]{0,10}\\*\\(.{0,29}\\);this[^,;=]{0,90}\\([^,;=]{0,90}\\),this(\\.y|\\['y'\\])=this[^,;=]{0,20}-1.5\\*[^,;=]{0,40}\\*1.8;?)",
      "replacement": " = window.charasin $1 ;\r\nwindow.displacementFilter.uniforms.textureScale = this.scale.x;"
    },
    {
      "id": "L",
      "pattern": "([\\s\\S]*)",
      "replacement": "$1\r\n\r\n\r\n'use strict';\r\nPIXI.DepthPerspectiveFilter = new PIXI.Filter(null, `precision mediump float;\r\nuniform vec2 offset;\r\n\r\nuniform sampler2D uSampler;\r\nuniform sampler2D displacementMap;\r\n\r\nuniform float textureScale;\r\n\r\nuniform vec2 textureSize;\r\nuniform vec2 frameSize;\r\nuniform vec2 filterAreaOffset;\r\n\r\nuniform float padding;\r\nuniform vec4 filterArea;\r\nuniform vec4 filterClamp;\r\n\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vColor;\r\nuniform vec4 dimensions;\r\nuniform vec2 mapDimensions;\r\nuniform float scale;\r\nuniform float focus;\r\n\r\n\r\nvec2 mapCoordDepth(vec2 coord)\r\n{\r\n    return (coord * (frameSize) - filterAreaOffset - padding) \/ textureSize \/ textureScale;\r\n}\r\n\r\nconst float compression = 1.0;\r\nconst float dmin = 0.0;\r\nconst float dmax = 1.0;\r\n\r\n#define MAXSTEPS 600.0\r\nfloat steps = max(MAXSTEPS *length(offset), 30.0);\r\n\r\n\r\n\r\nvoid main(void)\r\n{\r\n\r\n    float aspect = dimensions.x \/ dimensions.y;\r\n    vec2 scale2 =\r\n        vec2(scale * min(1.0, 1.0 \/ aspect), scale * min(1.0, aspect)) * vec2(1, -1);\r\n    mat2 baseVector =\r\n        mat2(vec2((0.5 - focus) * (offset) - (offset) \/ 2.0) * scale2,\r\n             vec2((0.5 - focus) * (offset) + (offset) \/ 2.0) * scale2);\r\n\r\n    vec2 pos = (vTextureCoord);\r\n    mat2 vector = baseVector;\r\n\r\n    float dstep = compression \/ (steps - 1.0);\r\n    vec2 vstep = (vector[1] - vector[0]) \/ vec2((steps - 1.0));\r\n\r\n    vec2 posSumLast = vec2(0.0);\r\n    vec2 posSum = vec2(0.0);\r\n\r\n    float weigth = 1.0;\r\n    float dpos;\r\n    float dposLast;\r\n\r\n    for (float i = 0.0; i < MAXSTEPS; ++i)\r\n    {\r\n        vec2 vpos = pos + vector[1] - i * vstep;\r\n        dpos = 1.0 - i * dstep;\r\n        float depth = texture2D(displacementMap, mapCoordDepth(vpos)).r;\r\n\r\n\r\n        if (texture2D(uSampler, vpos)[3] == 0.0)\r\n        {\r\n            depth = 0.0;\r\n        }\r\n\r\n        depth = clamp(depth, dmin, dmax);\r\n\r\n        if (dpos > depth)\r\n        {\r\n            posSumLast = vpos;\r\n            dposLast = dpos;\r\n        }\r\n        else\r\n        {\r\n            posSum = vpos;\r\n            weigth = (depth - dposLast) \/ dstep;\r\n            break;\r\n        }\r\n    };\r\n\r\n    gl_FragColor = texture2D(\r\n                       uSampler,\r\n                       (posSum - posSumLast) * -clamp(weigth * 0.5 + 0.5, 0.0, 1.5) + posSum);\r\n\r\n}`);\r\n\r\nPIXI.DepthPerspectiveFilter.apply = function(filterManager, input, output)\r\n{\r\n    this.uniforms.dimensions = {\r\n    0: input.sourceFrame.width,\r\n    1: input.sourceFrame.height\r\n    };\r\n\r\n    this.uniforms.padding = this.padding;\r\n    \r\n    this.uniforms.frameSize = { \r\n    0: input.size.width, \r\n    1: input.size.height\r\n    };\r\n\r\n    this.uniforms.filterAreaOffset = { \r\n    0: Math.min(window.currentChara.worldTransform.tx, 0.0), \r\n    1: Math.min(window.currentChara.worldTransform.ty, 0.0)\r\n    };\r\n\r\n\r\n    \/\/\/\/\/\/\/\/ mouse\r\n    var mousex2 = (window.pixiApp.renderer.plugins.interaction.mouse.global.x);\r\n    var mousey2 = (window.pixiApp.renderer.plugins.interaction.mouse.global.y);\r\n\r\n    if (!window.mouseoutside) {\r\n        if (!window.mousex1)\r\n            window.mousex1 = mousex2;\r\n        if (!window.mousey1)\r\n            window.mousey1 = mousey2;\r\n\r\n        if (!window.mousex)\r\n            window.mousex = 0;\r\n        if (!window.mousey)\r\n            window.mousey = 0;\r\n        if (!window.mouset)\r\n            window.mouset = Date.now();\r\n\r\n        window.mousex += (mousex2 - window.mousex1) * (Date.now() - window.mouset);\r\n        window.mousey += (mousey2 - window.mousey1) * (Date.now() - window.mouset);\r\n\r\n        window.mousex1 = mousex2;\r\n        window.mousey1 = mousey2;\r\n    }\r\n\r\n    var flip = (window.currentChara.transform.position.x - window.portOffset) \/ (window.portOffsetR) - 0.5;\r\n    window.displacementFilter.uniforms.offset = [flip * (window.mousex \/ 1200.0 * 0.05) * 1.3, 0.02 * window.charasin - 0.01 + (window.mousey \/ 720.0 * 0.05) * 0.6];\r\n\r\n    window.mousex = window.mousex * Math.pow(0.9, (Date.now() - window.mouset) \/ 30.0);\r\n    window.mousey = window.mousey * Math.pow(0.9, (Date.now() - window.mouset) \/ 30.0);\r\n    window.mouset = Date.now();\r\n\r\n\r\n    \/\/\/\/\/\/\/\/\r\n    \r\n    var vertices = window.jiggledBaseMapMesh.vertices;\r\n    var vertices2 = window.jiggledDepthMapMesh.vertices;\r\n\r\n    var newMx = window.displacementFilter.uniforms.offset[0];\r\n    var newMy = window.displacementFilter.uniforms.offset[1];\r\n    \r\n    var baseMap = window.currentChara.texture;\r\n    var depthMap = window.displacementSprite.texture;\r\n    if (baseMap && baseMap.baseTexture && depthMap && depthMap.baseTexture) {\r\n\r\n        window.My2 = window.My;\r\n        window.Mx2 = window.Mx;\r\n        window.My = newMy;\r\n        window.Mx = newMx;\r\n        for (var y = 0; y < window.jiggleMeshH; y++) {\r\n            for (var x = 0; x < window.jiggleMeshW; x++) {\r\n                resetForce(x, y);\r\n            }\r\n        }\r\n\r\n        if (window.Mx && window.My && window.Mx2 && window.My2 && newMx != -999999 && window.Mx != -999999 && window.Mx2 != -999999) {\r\n    \r\n            var aX = (window.Mx2 - window.Mx) - (window.Mx - newMx);\r\n            var aY = (window.My2 - window.My) - (window.My - newMy);\r\n    \r\n            for (var y = 0; y < window.jiggleMeshH; y++) {\r\n                for (var x = 0; x < window.jiggleMeshW; x++) {\r\n                    var m = window.jiggleMovement[y * window.jiggleMeshW + x];\r\n                    window.jiggleForces[y * window.jiggleMeshW + x].x += aX * m * -50;\r\n                    window.jiggleForces[y * window.jiggleMeshW + x].y += aY * m * 50;\r\n                }\r\n            }\r\n        }\r\n    \r\n\r\n        for (var y = 0; y < window.jiggleMeshH; y++) {\r\n            for (var x = 0; x < window.jiggleMeshW; x++) {\r\n                if (x != 0) {\r\n                    springUpdate(x - 1, y, x, y);\r\n                }\r\n                if (y != 0) {\r\n                    springUpdate(x, y - 1, x, y);\r\n                }\r\n            }\r\n        }\r\n    \r\n    \r\n        for (var y = 0; y < window.jiggleMeshH; y++) {\r\n            for (var x = 0; x < window.jiggleMeshW; x++) {\r\n                addDampingForce(x, y);\r\n                update(x, y);\r\n            }\r\n        }\r\n\r\n    \r\n        for (var i = 0; i < window.jigglePositions.length; i++) {\r\n            var pos = window.jigglePositions[i];\r\n            vertices[i * 2] = Math.min(Math.max(pos.x, 0), baseMap.width);\r\n            vertices[i * 2 + 1] = Math.min(Math.max(pos.y, 0), baseMap.height);\r\n    \r\n            vertices2[i * 2] = vertices[i * 2];\r\n            vertices2[i * 2 + 1] = vertices[i * 2 + 1];\r\n        }\r\n    }\r\n    \/\/\/\/\/\/\/\/\r\n\r\n    window.jiggledDepthMapMesh.visible = true;\r\n    window.pixiApp.renderer.render(window.jiggledDepthMapMesh, window.jiggledDepthMapRT.texture);\r\n    window.jiggledDepthMapMesh.visible = false;\r\n\r\n\r\n    \/\/ draw the filter...\r\n    filterManager.applyFilter(this, input, output);\r\n}\r\n\r\n\r\nfunction resetForce(x, y) {\r\n    window.jiggleForces[y * window.jiggleMeshW + x] = { x: 0, y: 0 };\r\n}\r\n\r\nfunction addForce(x, y, addX, addY) {\r\n    var f = window.jiggleForces[y * window.jiggleMeshW + x];\r\n    f.x += addX;\r\n    f.y += addY;\r\n}\r\n\r\nfunction addDampingForce(x, y) {\r\n    var v = jiggleVelocities[y * window.jiggleMeshW + x];\r\n    var f = window.jiggleForces[y * window.jiggleMeshW + x];\r\n    f.x -= v.x * window.damping[y * window.jiggleMeshW + x];\r\n    f.y -= v.y * window.damping[y * window.jiggleMeshW + x];\r\n}\r\n\r\n\r\nfunction update(x, y) {\r\n    var p = window.jigglePositions[y * window.jiggleMeshW + x];\r\n    var v = window.jiggleVelocities[y * window.jiggleMeshW + x];\r\n    var f = window.jiggleForces[y * window.jiggleMeshW + x];\r\n\r\n    if (window.jiggleStaticFlags[y * window.jiggleMeshW + x] == false) {\r\n        v.x += f.x;\r\n        v.y += f.y;\r\n        p.x += v.x;\r\n        p.y += v.y;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction springUpdate(x1, y1, x2, y2) {\r\n    if (window.jiggleStaticFlags[x1 + y1 * window.jiggleMeshW.w] && window.jiggleStaticFlags[x2 + y2 * window.jiggleMeshW.w]) \r\n        return;\r\n\r\n    var distanceOrigin = (x2 - x1) * window.gridW + (y2 - y1) * window.gridH;\r\n    \r\n    \r\n\r\n    var p1 = window.jigglePositions[y1 * window.jiggleMeshW + x1];\r\n    var p2 = window.jigglePositions[y2 * window.jiggleMeshW + x2];\r\n\r\n    var distance = len(sub(p1, p2));\r\n\r\n    var springiness = (window.springiness[y1 * window.jiggleMeshW + x1] + window.springiness[y2 * window.jiggleMeshW + x2]) \/ 2;\r\n\r\n    var springForce = springiness * (distanceOrigin - distance);\r\n    var frcToAdd = tim(normalize(sub(p1, p2)), springForce);\r\n\r\n    addForce(x1, y1, frcToAdd.x, frcToAdd.y);\r\n    addForce(x2, y2, -frcToAdd.x, -frcToAdd.y);\r\n}\r\n\r\n\r\nfunction len(v) {\r\n    return Math.sqrt(v.x * v.x + v.y * v.y);\r\n}\r\n\r\nfunction normalize(v) {\r\n    var l = len(v);\r\n    return { x: v.x \/ l, y: v.y \/ l };\r\n}\r\n\r\nfunction sub(v1, v2) {\r\n    return { x: v1.x - v2.x, y: v1.y - v2.y }\r\n}\r\n\r\nfunction tim(v1, s) {\r\n    return { x: v1.x * s, y: v1.y * s }\r\n}"
    }
  ],
  "goto_patches": [
    {
      "id": "A",
      "pattern": "(\u003d[^,;\u003d]{0,50}\\(this\\)\\|\\|this;return ([^,;\u003d]{0,50}\u003dnew PIXI.{0,80},){6}[^,;\u003d]{0,50}\u003dnew [^;\u003d]{0,80}\\((0x4f|79),(0xa4|164)\\),)",
      "replacement": "\u003d window.sound_options $1"
    },
    {
      "id": "B",
      "pattern": "(\u003dnew )([^,;\u003d]{0,20})(,[^,;\u003d]{0,70}\\((0x5a|90),(0x18e|398)\\),)",
      "replacement": "$1$2$3\n    window.sound_options._toggle3d \u003d new $2,\n    window.sound_options._toggle3d.position.set(-120, 150),\n    window.sound_options._toggle3d_ai \u003d new $2,\n    window.sound_options._toggle3d_ai.position.set(-120, 215),\n    window.sound_options._toggle3d_text \u003d new PIXI.Text(\u0027Kantai3D v3.7\\\\n\\\\nExtra Depth Maps\u0027, new PIXI.TextStyle({fontFamily: \"Georgia\", fontSize: 28, fill: \u0027#ffffff\u0027})),\n    window.sound_options._toggle3d_text.position.set(-360, 150),\n    window.sound_options._toggle3d_ai_text \u003d new PIXI.Text(\u0027Extra depth maps are generated by AI \\\\nfor all CGs without a painted depth map.\\\\n3D Effects are usually rougher.\\\\n\\\\nChanges will be effective on next return \\\\nto Home Port.\u0027, new PIXI.TextStyle({fontFamily: \"Georgia\", fontSize: 18, fill: \u0027#ffffff\u0027})),\n    window.sound_options._toggle3d_ai_text.position.set(-360, 290),\n    window.sound_options._toggle3d_bg \u003d new PIXI.Graphics(),\n    window.sound_options._toggle3d_bg.beginFill(0x202020, 0.8).lineStyle(2, 0xd1b44b, 0.8).drawRect(7-373-15, 56, 373, 413),\n    window.sound_options.addChild(window.sound_options._toggle3d_bg),\n    window.sound_options.addChild(window.sound_options._toggle3d),\n    window.sound_options.addChild(window.sound_options._toggle3d_ai),\n    window.sound_options.addChild(window.sound_options._toggle3d_text),\n    window.sound_options.addChild(window.sound_options._toggle3d_ai_text),"
    },
    {
      "id": "C",
      "pattern": "(\\((0x26|38),(0x18e|398)\\),this[^,;\u003d]{0,60}\\((0xc6|198),(0x18e|398)\\),)",
      "replacement": "$1\n    this._toggle3d.initialize(),\n    this._toggle3d_ai.initialize(),"
    },
    {
      "id": "D",
      "pattern": "(function\\(\\)\\{[^{]{0,90},([^;\u003d]{0,90}\\(\\),this[^\u003d]{0,90}\u003dnull){11})([^,])",
      "replacement": "$1\n ;    this._toggle3d.dispose();\n    this._toggle3d \u003d null;\n    this._toggle3d_ai.dispose();\n    this._toggle3d_ai \u003d null; $3"
    },
    {
      "id": "E",
      "pattern": "(,\u0027skin_id\u0027:this\\[[^{]{0,90}\\]\\};)",
      "replacement": "$1\nwindow.isDepthEnabled \u003d this._sound._toggle3d.value; \n    window.isDepthAiEnabled \u003d this._sound._toggle3d_ai.value;\n    "
    },
    {
      "id": "F",
      "pattern": "((null\u003d\u003dthis[^,;\u003d]{0,40}\u0026\u0026\\(this[^,;\u003d]{0,40}\u003d[^,;\u003d]{0,70}\\),this[^,;\u003d]{0,40}\u003d[^,;\u003d]{0,70},){2})",
      "replacement": "$1\n    this._toggle3d.value \u003d window.isDepthEnabled !\u003d false,\n    this._toggle3d_ai.value \u003d window.isDepthAiEnabled !\u003d false,"
    },
    {
      "id": "G",
      "pattern": "\\}(return.{0,599}\\(0(x0)?,parseInt\\([^,;\u003d]{0,20}\\)\\)\\))",
      "replacement": "\n } return window.displacementPath \u003d (function () {\n$1\n})();\n"
    },
    {
      "id": "H",
      "pattern": "(new PIXI[^,;\u003d]{0,20}\\([^,;\u003d]{0,70},[^,;\u003d]{0,60},[^,;\u003d]{0,20}\\);document)",
      "replacement": "\n window.pixiApp \u003d $1"
    },
    {
      "id": "I",
      "pattern": "(var[^\u003d]{0,19}\u003d[^\u003d]{0,29},[^\u003d]{0,39}\u003d[^\u003d]{0,99},[^\u003d]{0,99})(\u003d.{0,99}0x0.{0,99}0x0.{0,99}PIXI.{0,999}\\((0x1eb,-0x58|491,-88)\\);var [^\u003d]{0,99}\u003d)",
      "replacement": "\n $1  \u003d window.charar $2 window.charal \u003d \n"
    },
    {
      "id": "J",
      "pattern": "(\\/0x2.{0,99}\\/0x2,[^,;\u003d]{0,99})(\\\u003d.{0,999}-(0x58|88)[^;]{0,200};?)(\\})",
      "replacement": "\n $1 \u003d window.charah $2\nwindow.portOffset \u003d -window.charal + window.charah.x;//-l+h.x\nwindow.portOffsetR \u003d window.charar;//r\n\n\nvar url1 \u003d window.displacementPath.replace(/resources\\\\/ship\\\\/full[_dmg]*\\\\/([0-9]*)_([0-9_a-z]*).png(\\\\?version\u003d)?([0-9]*)/g, \\\"https://cdn.jsdelivr.net/gh/laplamgor/kantai3d-depth-maps@master/source/\\$1/\\$1_\\$2_v\\$4.png\\\");\nvar url2 \u003d window.displacementPath.replace(/resources\\\\/ship\\\\/full[_dmg]*\\\\/([0-9]*)_([0-9_a-z]*).png(\\\\?version\u003d)?([0-9]*)/g, \\\"https://kantai3d.com/midas/\\$1_\\$2_v\\$4.png\\\");\nvar triedUrl2 \u003d false;\n\nconst loadDepthUrl \u003d function(url, chara) {\nwindow.displacementSprite \u003d PIXI.Sprite.fromImage(url);\nwindow.displacementFilter \u003d PIXI.DepthPerspectiveFilter;\n\nwindow.displacementFilter.uniforms.textureSize \u003d {\n    0: chara.texture.width,\n    1: chara.texture.height\n};\n\nwindow.displacementSprite.visible \u003d false;\n\nwindow.displacementFilter.padding \u003d 150;\n\nwindow.currentChara \u003d chara;\n\nif (window.displacementSprite.width !\u003d 1) {\n    console.log(\u0027The depth map for this secretary is already loaded.\u0027);\n    window.kantai3dInterface.notifyLoaded(window.displacementPath.replace(/resources\\\\/ship\\\\/full[_dmg]*\\\\/([0-9]*)_([0-9_a-z]*).png(\\\\?version\u003d)?([0-9]*)/g, \"\\$1_\\$2_v\\$4\\.png\"));\n    // The depth map is already loaded\n    window.displacementFilter.uniforms.displacementMap \u003d window.displacementSprite.texture;\n    window.displacementFilter.uniforms.scale \u003d 1.0;\n    window.displacementFilter.uniforms.focus \u003d 0.5;\n    window.displacementFilter.uniforms.offset \u003d [0.0, 0.0];\n    window.currentChara.filters \u003d [window.displacementFilter];\n    window.currentChara.addChild(window.displacementSprite);\n\n    window.mousex1 \u003d null;\n    window.mousey1 \u003d null;\n    prepareJiggle(window.currentChara.texture, window.displacementSprite.texture);\n    window.displacementFilter.uniforms.displacementMap \u003d window.jiggledDepthMapRT.texture;\n} else {\n    // The depth map is not loaded yet, and may not exist in server at all\n    // Disable the filter first\n    chara.filters \u003d [];\n    window.currentChara.filters \u003d [];\n    window.displacementSprite.texture.baseTexture.on(\u0027loaded\u0027, function() {\n\n        console.log(\u0027The depth map for this secretary is now loaded.\u0027);\n        window.kantai3dInterface.notifyLoaded(window.displacementPath.replace(/resources\\\\/ship\\\\/full[_dmg]*\\\\/([0-9]*)_([0-9_a-z]*).png(\\\\?version\u003d)?([0-9]*)/g, \"\\$1_\\$2_v\\$4\\.png\"));\n        // Re-enable the filter when resource loaded\n        window.displacementFilter.uniforms.displacementMap \u003d window.displacementSprite.texture;\n        window.displacementFilter.uniforms.scale \u003d 1.0;\n        window.displacementFilter.uniforms.focus \u003d 0.5;\n        window.displacementFilter.uniforms.offset \u003d [0.0, 0.0];\n        window.currentChara.filters \u003d [window.displacementFilter];\n        window.currentChara.addChild(window.displacementSprite);\n\n        window.mousex1 \u003d null;\n        window.mousey1 \u003d null;\n        prepareJiggle(window.currentChara.texture, window.displacementSprite.texture);\n        window.displacementFilter.uniforms.displacementMap \u003d window.jiggledDepthMapRT.texture;\n    });\n    window.displacementSprite.texture.baseTexture.on(\u0027error\u0027, function() {\n        if (!triedUrl2 \u0026\u0026 window.isDepthAiEnabled !\u003d false) {\n            triedUrl2 \u003d true;\n            loadDepthUrl(url2, chara);\n        }\n        console.log(\u0027The depth map for this secretary is not available. Please visit https://github.com/laplamgor/kantai3d to check the supported CG list and consider to contribute your own depth map.\u0027);\n        window.kantai3dInterface.notifyError(window.displacementPath.replace(/resources\\\\/ship\\\\/full[_dmg]*\\\\/([0-9]*)_([0-9_a-z]*).png(\\\\?version\u003d)?([0-9]*)/g, \"\\$1_\\$2_v\\$4\\.png\"));\n    });\n\n    if (!window.displacementSprite.texture.baseTexture.isLoading) {\n        if (!triedUrl2 \u0026\u0026 window.isDepthAiEnabled !\u003d false) {\n            triedUrl2 \u003d true;\n            loadDepthUrl(url2, chara);\n        }\n    }\n}\n}\nif (window.isDepthEnabled !\u003d false) {\n    loadDepthUrl(url1, this._chara);\n} else {\n    this._chara.filters \u003d [];\n    window.currentChara.filters \u003d [];\n}///////////////////////////////////\nfunction prepareJiggle(baseMap, depthMap) {\n    window.jigglePositions \u003d [];\n    window.jiggleVelocities \u003d [];\n    window.jiggleForces \u003d [];\n    window.jiggleStaticFlags \u003d [];\n    window.jiggleMovement \u003d [];\n    window.damping \u003d [];\n    window.springiness \u003d [];\n    \n    var depthImg \u003d depthMap.baseTexture.source;\n    var tempCanvas \u003d document.createElement(\u0027canvas\u0027);\n    tempCanvas.width \u003d depthImg.width;\n    tempCanvas.height \u003d depthImg.height;\n    let tmCtx \u003d tempCanvas.getContext(\u00272d\u0027);\n    tmCtx.drawImage(depthImg, 0, 0);\n    var dmData \u003d tmCtx.getImageData(0, 0, depthImg.width, depthImg.height).data;\n    window.jiggleMeshW \u003d Math.ceil(baseMap.width / 10.0);\n    window.jiggleMeshH \u003d Math.ceil(baseMap.height / 10.0);\n    // This is the jiggled mseh\n    window.jiggledDepthMapMesh \u003d new PIXI.mesh.Plane(window.displacementSprite.texture, window.jiggleMeshW, window.jiggleMeshH);\n    window.jiggledDepthMapMesh.visible \u003d false;\n    // This is the render texture of the jiggled mseh\n    window.jiggledDepthMapRT \u003d new PIXI.Sprite(PIXI.RenderTexture.create(baseMap.width, baseMap.height));\n    window.jiggledDepthMapRT.visible \u003d false;\n    window.jiggledBaseMapMesh \u003d new PIXI.mesh.Plane(baseMap, window.jiggleMeshW, window.jiggleMeshH);\n    window.pixiApp.stage.addChild(window.jiggledDepthMapMesh);\n    window.pixiApp.stage.addChild(window.jiggledDepthMapRT);\n    window.currentChara.addChild(window.jiggledBaseMapMesh);\n    window.gridW \u003d baseMap.width / (window.jiggleMeshW - 1.0);\n    window.gridH \u003d baseMap.height / (window.jiggleMeshH - 1.0);\n    for (var y \u003d 0; y \u003c window.jiggleMeshH; y++) {\n        for (var x \u003d 0; x \u003c window.jiggleMeshW; x++) {\n            window.jigglePositions.push({ x: window.gridW * x, y: y * window.gridH });\n            window.jiggleVelocities.push({ x: 0, y: 0 });\n            window.jiggleForces.push({ x: 0, y: 0 });\n\n            var r \u003d dmData[(Math.floor(y * window.gridH) * baseMap.width + Math.floor(x * window.gridW)) * 4 + 0];\n            var b \u003d dmData[(Math.floor(y * window.gridH) * baseMap.width + Math.floor(x * window.gridW)) * 4 + 2];\n\n            window.damping.push(1.0 / (b / 255.0 * 16.0 + 1));\n            window.springiness.push(1.0 / ( b / 255.0 * 32.0 + 1));\n        \n\n            window.jiggleStaticFlags.push(b \u003d\u003d 0);\n            window.jiggleMovement.push((r - 127.0) / 128.0);\n        }\n    }\n    \n    window.Mx \u003d null;\n    window.My \u003d null;\n    window.Mx2 \u003d null;\n    window.My2 \u003d null;\n    \n    // start animating\n    window.pixiApp.ticker.add(function (t) {\n\n    });\n} $4"
    },
    {
      "id": "K",
      "pattern": "(\\\u003dMath[^,;\u003d]{0,40},[^,;\u003d]{0,30}\\\u003d(0x)?1\\+(0)?\\.012[^,;\u003d]{0,10}\\*\\(.{0,29}\\);this[^,;\u003d]{0,90}\\([^,;\u003d]{0,90}\\),this(\\.y|\\[\u0027y\u0027\\])\u003dthis[^,;\u003d]{0,20}-1.5\\*[^,;\u003d]{0,40}\\*1.8;?)",
      "replacement": "\n \u003d window.charasin $1 ;\nwindow.displacementFilter.uniforms.textureScale \u003d this.scale.x;\n\n"
    },
    {
      "id": "L",
      "pattern": "$",
      "replacement": ";\n\nfunction refreshGyroData() {\n  if (window.displacementFilter \u0026\u0026 window.displacementFilter.uniforms \u0026\u0026 window.displacementFilter.uniforms.offset) {\n    window.displacementFilter.uniforms.offset[0] \u003d window.kantai3dInterface.getX();\n    window.displacementFilter.uniforms.offset[1] \u003d window.kantai3dInterface.getY();\n  }}\n\u0027use strict\u0027;\nPIXI.DepthPerspectiveFilter \u003d new PIXI.Filter(null, `precision mediump float;\nuniform vec2 offset;\n\nuniform sampler2D uSampler;\nuniform sampler2D displacementMap;\n\nuniform float textureScale;\n\nuniform vec2 textureSize;\nuniform vec2 frameSize;\nuniform vec2 filterAreaOffset;\n\nuniform float padding;\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\n\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\nuniform vec4 dimensions;\nuniform vec2 mapDimensions;\nuniform float scale;\nuniform float focus;\n\n\nvec2 mapCoordDepth(vec2 coord)\n{\n    return (coord * (frameSize) - filterAreaOffset - padding) / textureSize / textureScale;\n}\n\nconst float compression \u003d 1.0;\nconst float dmin \u003d 0.0;\nconst float dmax \u003d 1.0;\n\n#define MAXSTEPS 600.0\nfloat steps \u003d max(MAXSTEPS *length(offset), 30.0);\n\n\n\nvoid main(void)\n{\n\n    float aspect \u003d dimensions.x / dimensions.y;\n    vec2 scale2 \u003d\n        vec2(scale * min(1.0, 1.0 / aspect), scale * min(1.0, aspect)) * vec2(1, -1);\n    mat2 baseVector \u003d\n        mat2(vec2((0.5 - focus) * (offset) - (offset) / 2.0) * scale2,\n             vec2((0.5 - focus) * (offset) + (offset) / 2.0) * scale2);\n\n    vec2 pos \u003d (vTextureCoord);\n    mat2 vector \u003d baseVector;\n\n    float dstep \u003d compression / (steps - 1.0);\n    vec2 vstep \u003d (vector[1] - vector[0]) / vec2((steps - 1.0));\n\n    vec2 posSumLast \u003d vec2(0.0);\n    vec2 posSum \u003d vec2(0.0);\n\n    float weigth \u003d 1.0;\n    float dpos;\n    float dposLast;\n\n    for (float i \u003d 0.0; i \u003c MAXSTEPS; ++i)\n    {\n        vec2 vpos \u003d pos + vector[1] - i * vstep;\n        dpos \u003d 1.0 - i * dstep;\n        float depth \u003d texture2D(displacementMap, mapCoordDepth(vpos)).r;\n\n\n        if (texture2D(uSampler, vpos)[3] \u003d\u003d 0.0)\n        {\n            depth \u003d 0.0;\n        }\n\n        depth \u003d clamp(depth, dmin, dmax);\n\n        if (dpos \u003e depth)\n        {\n            posSumLast \u003d vpos;\n            dposLast \u003d dpos;\n        }\n        else\n        {\n            posSum \u003d vpos;\n            weigth \u003d (depth - dposLast) / dstep;\n            break;\n        }\n    };\n\n    gl_FragColor \u003d texture2D(\n                       uSampler,\n                       (posSum - posSumLast) * -clamp(weigth * 0.5 + 0.5, 0.0, 1.5) + posSum);\n\n}`);\n\nPIXI.DepthPerspectiveFilter.apply \u003d function(filterManager, input, output)\n{\n  refreshGyroData();\n  this.uniforms.dimensions \u003d {\n        0: input.sourceFrame.width,\n        1: input.sourceFrame.height\n      };\n\n    this.uniforms.padding \u003d this.padding;\n    this.uniforms.frameSize \u003d { \n        0: input.size.width, \n        1: input.size.height\n    };\n    this.uniforms.filterAreaOffset \u003d { \n        0: Math.min(window.currentChara.worldTransform.tx, 0.0), \n        1: Math.min(window.currentChara.worldTransform.ty, 0.0)\n    };\n    ////////\n    \n    var vertices \u003d window.jiggledBaseMapMesh.vertices;\n    var vertices2 \u003d window.jiggledDepthMapMesh.vertices;\n\n    var newMx \u003d window.displacementFilter.uniforms.offset[0];\n    var newMy \u003d window.displacementFilter.uniforms.offset[1];\n    \n    var baseMap \u003d window.currentChara.texture;\n    var depthMap \u003d window.displacementSprite.texture;\n    if (baseMap \u0026\u0026 baseMap.baseTexture \u0026\u0026 depthMap \u0026\u0026 depthMap.baseTexture) {\n\n        window.My2 \u003d window.My;\n        window.Mx2 \u003d window.Mx;\n        window.My \u003d newMy;\n        window.Mx \u003d newMx;\n        for (var y \u003d 0; y \u003c window.jiggleMeshH; y++) {\n            for (var x \u003d 0; x \u003c window.jiggleMeshW; x++) {\n                resetForce(x, y);\n            }\n        }\n\n        if (window.Mx \u0026\u0026 window.My \u0026\u0026 window.Mx2 \u0026\u0026 window.My2 \u0026\u0026 newMx !\u003d -999999 \u0026\u0026 window.Mx !\u003d -999999 \u0026\u0026 window.Mx2 !\u003d -999999) {\n    \n            var aX \u003d (window.Mx2 - window.Mx) - (window.Mx - newMx);\n            var aY \u003d (window.My2 - window.My) - (window.My - newMy);\n    \n            for (var y \u003d 0; y \u003c window.jiggleMeshH; y++) {\n                for (var x \u003d 0; x \u003c window.jiggleMeshW; x++) {\n                    var m \u003d window.jiggleMovement[y * window.jiggleMeshW + x];\n                    window.jiggleForces[y * window.jiggleMeshW + x].x +\u003d aX * m * -50;\n                    window.jiggleForces[y * window.jiggleMeshW + x].y +\u003d aY * m * 50;\n                }\n            }\n        }\n    \n\n        for (var y \u003d 0; y \u003c window.jiggleMeshH; y++) {\n            for (var x \u003d 0; x \u003c window.jiggleMeshW; x++) {\n                if (x !\u003d 0) {\n                    springUpdate(x - 1, y, x, y);\n                }\n                if (y !\u003d 0) {\n                    springUpdate(x, y - 1, x, y);\n                }\n            }\n        }\n    \n    \n        for (var y \u003d 0; y \u003c window.jiggleMeshH; y++) {\n            for (var x \u003d 0; x \u003c window.jiggleMeshW; x++) {\n                addDampingForce(x, y);\n                update(x, y);\n            }\n        }\n\n    \n        for (var i \u003d 0; i \u003c window.jigglePositions.length; i++) {\n            var pos \u003d window.jigglePositions[i];\n            vertices[i * 2] \u003d Math.min(Math.max(pos.x, 0), baseMap.width);\n            vertices[i * 2 + 1] \u003d Math.min(Math.max(pos.y, 0), baseMap.height);\n    \n            vertices2[i * 2] \u003d vertices[i * 2];\n            vertices2[i * 2 + 1] \u003d vertices[i * 2 + 1];\n        }\n    }\n    ////////\n\n\n\n\n\n\n\n\n\n    window.jiggledDepthMapMesh.visible \u003d true;\n    window.pixiApp.renderer.render(window.jiggledDepthMapMesh, window.jiggledDepthMapRT.texture);\n    window.jiggledDepthMapMesh.visible \u003d false;  // draw the filter...\n  filterManager.applyFilter(this, input, output);\n}\n\nfunction resetForce(x, y) {\n    window.jiggleForces[y * window.jiggleMeshW + x] \u003d { x: 0, y: 0 };\n}\n\nfunction addForce(x, y, addX, addY) {\n    var f \u003d window.jiggleForces[y * window.jiggleMeshW + x];\n    f.x +\u003d addX;\n    f.y +\u003d addY;\n}\n\nfunction addDampingForce(x, y) {\n    var v \u003d jiggleVelocities[y * window.jiggleMeshW + x];\n    var f \u003d window.jiggleForces[y * window.jiggleMeshW + x];\n    f.x -\u003d v.x * window.damping[y * window.jiggleMeshW + x];\n    f.y -\u003d v.y * window.damping[y * window.jiggleMeshW + x];\n}\n\n\nfunction update(x, y) {\n    var p \u003d window.jigglePositions[y * window.jiggleMeshW + x];\n    var v \u003d window.jiggleVelocities[y * window.jiggleMeshW + x];\n    var f \u003d window.jiggleForces[y * window.jiggleMeshW + x];\n\n    if (window.jiggleStaticFlags[y * window.jiggleMeshW + x] \u003d\u003d false) {\n        v.x +\u003d f.x;\n        v.y +\u003d f.y;\n        p.x +\u003d v.x;\n        p.y +\u003d v.y;\n    }\n}\n\n\n\nfunction springUpdate(x1, y1, x2, y2) {\n    if (window.jiggleStaticFlags[x1 + y1 * window.jiggleMeshW.w] \u0026\u0026 !window.jiggleStaticFlags[x2 + y2 * window.jiggleMeshW.w]) \n        return;\n\n    var distanceOrigin \u003d (x2 - x1) * window.gridW + (y2 - y1) * window.gridH;\n    \n    \n\n    var p1 \u003d window.jigglePositions[y1 * window.jiggleMeshW + x1];\n    var p2 \u003d window.jigglePositions[y2 * window.jiggleMeshW + x2];\n\n    var distance \u003d len(sub(p1, p2));\n\n    var springiness \u003d (window.springiness[y1 * window.jiggleMeshW + x1] + window.springiness[y2 * window.jiggleMeshW + x2]) / 2;\n\n    var springForce \u003d springiness * (distanceOrigin - distance);\n    var frcToAdd \u003d tim(normalize(sub(p1, p2)), springForce);\n\n    addForce(x1, y1, frcToAdd.x, frcToAdd.y);\n    addForce(x2, y2, -frcToAdd.x, -frcToAdd.y);\n}\n\n\nfunction len(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\nfunction normalize(v) {\n    var l \u003d len(v);\n    return { x: v.x / l, y: v.y / l };\n}\n\nfunction sub(v1, v2) {\n    return { x: v1.x - v2.x, y: v1.y - v2.y }\n}\n\nfunction tim(v1, s) {\n    return { x: v1.x * s, y: v1.y * s }\n}"
    }
  ]
}